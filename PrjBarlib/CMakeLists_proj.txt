set(PROJECT_NAME Barcode)

################################################################################
# Source groups
################################################################################
set(no_group_source_files
   "source/Source.cpp"
)
source_group("" FILES ${no_group_source_files})

set(Genetic
    "include/GenCommand.h"
    "include/GenCommon.h"
    "include/MachineProcessor.h"
    "source/Neuro.cpp"
)
source_group("Genetic" FILES ${Genetic})

set(algorithmes
   "algorithmes/detection.h"
    "algorithmes/ExportStats.h"
   "algorithmes/noise.h"
    "algorithmes/prep.h"
    "algorithmes/roofs.h"
    "algorithmes/algMain.h"
)
source_group("algorithmes" FILES ${algorithmes})

set(classes
    "include/barclasses.h"
    "include/barImg.h"
    "include/barline.h"
    "include/barscalar.h"
    "include/barstrucs.h"
    "source/barclasses.cpp"
)
source_group("classes" FILES ${classes})

set(include
    "include/include_cv.h"
    "include/include_py.h"
    "include/presets.h"
)
source_group("include" FILES ${include})

set(main
    "include/barcodeCreator.h"
    "include/component.h"
    "include/hole.h"
    "source/barcodeCreator.cpp"
    "source/component.cpp"
    "source/hole.cpp"
)
source_group("main" FILES ${main})

set(pylib
    "cpp.hint"
    "include/pytemplcalsses.h"
    "main.def"
    "source/Barpy.cpp"
)
source_group("pylib" FILES ${pylib})

set(ALL_FILES
    ${no_group_source_files}
    # ${Genetic}
    # ${algorithmes}
    # ${classes}
    ${include}
    ${main}
    ${pylib}
)

################################################################################
# Target
################################################################################
add_executable(${PROJECT_NAME} ${ALL_FILES})

use_props(${PROJECT_NAME} "${CMAKE_CONFIGURATION_TYPES}" "${DEFAULT_CXX_PROPS}")
set(ROOT_NAMESPACE Barcode)

if("${CMAKE_VS_PLATFORM_NAME}" STREQUAL "x64")
    set_target_properties(${PROJECT_NAME} PROPERTIES
        COMMON_LANGUAGE_RUNTIME_DLLCVLESS   "No"
        COMMON_LANGUAGE_RUNTIME_DLL         "No"
        COMMON_LANGUAGE_RUNTIME_PYTHON37    "No"
        COMMON_LANGUAGE_RUNTIME_PYTHON38    "No"
        COMMON_LANGUAGE_RUNTIME_PYTHONDEBUG "No"
    )
endif()
################################################################################
# Target name
################################################################################
if("${CMAKE_VS_PLATFORM_NAME}" STREQUAL "Any CPU")
    set_target_properties(${PROJECT_NAME} PROPERTIES
        TARGET_NAME_TEST        "barcode"
    )
elseif("${CMAKE_VS_PLATFORM_NAME}" STREQUAL "x64")
    set_target_properties(${PROJECT_NAME} PROPERTIES
        TARGET_NAME_DLL         "barcode"
        TARGET_NAME_PYTHON37    "barpy"
        TARGET_NAME_PYTHON38    "barpy"
        TARGET_NAME_PYTHONDEBUG "barpy"
        TARGET_NAME_STLCVLESS   "barcode"
        TARGET_NAME_STL         "barcode"
        TARGET_NAME_TEST        "barcode"
    )
endif()
################################################################################
# Output directory
################################################################################
if("${CMAKE_VS_PLATFORM_NAME}" STREQUAL "x64")
    set_target_properties(${PROJECT_NAME} PROPERTIES
        OUTPUT_DIRECTORY_DLLCVLESS   "${CMAKE_SOURCE_DIR}/${CMAKE_VS_PLATFORM_NAME}/$<CONFIG>/"
        OUTPUT_DIRECTORY_DLL         "${CMAKE_SOURCE_DIR}/${CMAKE_VS_PLATFORM_NAME}/$<CONFIG>/"
        OUTPUT_DIRECTORY_PYTHON37    "${CMAKE_SOURCE_DIR}/x64/Python37/"
        OUTPUT_DIRECTORY_PYTHON38    "${CMAKE_SOURCE_DIR}/x64/Python38/"
        OUTPUT_DIRECTORY_PYTHONDEBUG "D:/Programs/C++/Barcode/x64/PythonD/"
    )
endif()
if("${CMAKE_VS_PLATFORM_NAME}" STREQUAL "Any CPU")
    set_target_properties(${PROJECT_NAME} PROPERTIES
        INTERPROCEDURAL_OPTIMIZATION_DLLCVLESS   "TRUE"
        INTERPROCEDURAL_OPTIMIZATION_DLL         "TRUE"
        INTERPROCEDURAL_OPTIMIZATION_PYTHON37    "TRUE"
        INTERPROCEDURAL_OPTIMIZATION_PYTHON38    "TRUE"
        INTERPROCEDURAL_OPTIMIZATION_PYTHONDEBUG "TRUE"
        INTERPROCEDURAL_OPTIMIZATION_RELEASE     "TRUE"
        INTERPROCEDURAL_OPTIMIZATION_STLCVLESS   "TRUE"
        INTERPROCEDURAL_OPTIMIZATION_STL         "TRUE"
        INTERPROCEDURAL_OPTIMIZATION_TEST        "TRUE"
    )
elseif("${CMAKE_VS_PLATFORM_NAME}" STREQUAL "x64")
    set_target_properties(${PROJECT_NAME} PROPERTIES
        INTERPROCEDURAL_OPTIMIZATION_DLLCVLESS   "TRUE"
        INTERPROCEDURAL_OPTIMIZATION_DLL         "TRUE"
        INTERPROCEDURAL_OPTIMIZATION_PYTHON37    "TRUE"
        INTERPROCEDURAL_OPTIMIZATION_PYTHON38    "TRUE"
        INTERPROCEDURAL_OPTIMIZATION_PYTHONDEBUG "TRUE"
        INTERPROCEDURAL_OPTIMIZATION_RELEASE     "TRUE"
        INTERPROCEDURAL_OPTIMIZATION_STLCVLESS   "TRUE"
        INTERPROCEDURAL_OPTIMIZATION_STL         "TRUE"
        INTERPROCEDURAL_OPTIMIZATION_TEST        "TRUE"
    )
elseif("${CMAKE_VS_PLATFORM_NAME}" STREQUAL "x86")
    set_target_properties(${PROJECT_NAME} PROPERTIES
        INTERPROCEDURAL_OPTIMIZATION_DLLCVLESS   "TRUE"
        INTERPROCEDURAL_OPTIMIZATION_DLL         "TRUE"
        INTERPROCEDURAL_OPTIMIZATION_PYTHON37    "TRUE"
        INTERPROCEDURAL_OPTIMIZATION_PYTHON38    "TRUE"
        INTERPROCEDURAL_OPTIMIZATION_PYTHONDEBUG "TRUE"
        INTERPROCEDURAL_OPTIMIZATION_RELEASE     "TRUE"
        INTERPROCEDURAL_OPTIMIZATION_STLCVLESS   "TRUE"
        INTERPROCEDURAL_OPTIMIZATION_STL         "TRUE"
        INTERPROCEDURAL_OPTIMIZATION_TEST        "TRUE"
    )
endif()
################################################################################
# Include directories
################################################################################
if("${CMAKE_VS_PLATFORM_NAME}" STREQUAL "Any CPU")
    target_include_directories(${PROJECT_NAME} PUBLIC
        "$<$<CONFIG:Test>:"
            "${CMAKE_CURRENT_SOURCE_DIR}/include;"
            "${CMAKE_CURRENT_SOURCE_DIR}/../../../../MyA/Libraries/Include"
        ">"
    )
elseif("${CMAKE_VS_PLATFORM_NAME}" STREQUAL "x64")
    target_include_directories(${PROJECT_NAME} PUBLIC
        "$<$<CONFIG:Debug>:"
            "${CMAKE_CURRENT_SOURCE_DIR}/include;"
            "${CMAKE_CURRENT_SOURCE_DIR}/../../../../MyA/Libraries/Include"
        ">"
        "$<$<CONFIG:dllcvless>:"
            "${CMAKE_CURRENT_SOURCE_DIR}/../include"
        ">"
        "$<$<CONFIG:dll>:"
            "${CMAKE_CURRENT_SOURCE_DIR}/../../../../Install/Python/include;"
            "${CMAKE_CURRENT_SOURCE_DIR}/include;"
            "${CMAKE_CURRENT_SOURCE_DIR}/../../../../MyA/Libraries/Include"
        ">"
        "$<$<CONFIG:Python37>:"
            "${CMAKE_CURRENT_SOURCE_DIR}/../../../../Install/Python37/include;"
            "${CMAKE_CURRENT_SOURCE_DIR}/../../../../MyA/Libraries/sources/boost_1_74_0;"
            "${CMAKE_CURRENT_SOURCE_DIR}/include;"
            "${CMAKE_CURRENT_SOURCE_DIR}/../../../../MyA/Libraries/Include"
        ">"
        "$<$<CONFIG:Python38>:"
            "${CMAKE_CURRENT_SOURCE_DIR}/../../../../Install/Python38/include;"
            "${CMAKE_CURRENT_SOURCE_DIR}/../../../../MyA/Libraries/sources/boost_1_74_0;"
            "${CMAKE_CURRENT_SOURCE_DIR}/include;"
            "${CMAKE_CURRENT_SOURCE_DIR}/../../../../MyA/Libraries/Include"
        ">"
        "$<$<CONFIG:PythonDebug>:"
            "${CMAKE_CURRENT_SOURCE_DIR}/../../../../Install/Python38/include;"
            "${CMAKE_CURRENT_SOURCE_DIR}/../../../../MyA/Libraries/sources/boost_1_74_0;"
            "${CMAKE_CURRENT_SOURCE_DIR}/include;"
            "${CMAKE_CURRENT_SOURCE_DIR}/../../../../MyA/Libraries/Include"
        ">"
        "$<$<CONFIG:Release>:"
            "${CMAKE_CURRENT_SOURCE_DIR}/include;"
            "${CMAKE_CURRENT_SOURCE_DIR}/../../../../MyA/Libraries/Include"
        ">"
        "$<$<CONFIG:stlcvless>:"
            "${CMAKE_CURRENT_SOURCE_DIR}/../include"
        ">"
        "$<$<CONFIG:stl>:"
            "${CMAKE_CURRENT_SOURCE_DIR}/include;"
            "${CMAKE_CURRENT_SOURCE_DIR}/../../../../MyA/Libraries/Include"
        ">"
        "$<$<CONFIG:Test>:"
            "${CMAKE_CURRENT_SOURCE_DIR}/include;"
            "${CMAKE_CURRENT_SOURCE_DIR}/../../../../MyA/Libraries/Include"
        ">"
    )
endif()

################################################################################
# Compile definitions
################################################################################
if("${CMAKE_VS_PLATFORM_NAME}" STREQUAL "Any CPU")
    target_compile_definitions(${PROJECT_NAME} PRIVATE
        "$<$<CONFIG:Test>:"
            "_DEBUG;"
            "_STL"
        ">"
        "_MBCS"
    )
elseif("${CMAKE_VS_PLATFORM_NAME}" STREQUAL "x64")
    target_compile_definitions(${PROJECT_NAME} PRIVATE
        "$<$<CONFIG:Debug>:"
            ""
            "VDEBUG"
        ">"
        "$<$<CONFIG:dllcvless>:"
            "_WINDLL"
        ">"
        "$<$<CONFIG:dll>:"
            "_WINDLL"
        ">"
        "$<$<CONFIG:Python37>:"
            "_PYD"
        ">"
        "$<$<CONFIG:Python38>:"
            "_PYD"
        ">"
        "$<$<CONFIG:PythonDebug>:"
            "_PYD"
        ">"
        "$<$<CONFIG:Release>:"
            "USE_OPENCV"
        ">"
        "$<$<CONFIG:stlcvless>:"
            "_STL"
        ">"
        "$<$<CONFIG:stl>:"
            "_STL"
        ">"
        "$<$<CONFIG:Test>:"
            "_DEBUG;"
            "_STL"
        ">"
        "_MBCS"
    )
elseif("${CMAKE_VS_PLATFORM_NAME}" STREQUAL "x86")
    target_compile_definitions(${PROJECT_NAME} PRIVATE
        "_MBCS"
    )
endif()

################################################################################
# Compile and link options
################################################################################
if(MSVC)
    if("${CMAKE_VS_PLATFORM_NAME}" STREQUAL "Any CPU")
        target_compile_options(${PROJECT_NAME} PRIVATE
            $<$<CONFIG:Debug>:
                /Od
            >
            $<$<CONFIG:dllcvless>:
                /O2;
                /Oi;
                /Gy
            >
            $<$<CONFIG:dll>:
                /O2;
                /Oi;
                /Gy
            >
            $<$<CONFIG:Python37>:
                /O2;
                /Oi;
                /Gy
            >
            $<$<CONFIG:Python38>:
                /O2;
                /Oi;
                /Gy
            >
            $<$<CONFIG:PythonDebug>:
                /O2;
                /Oi;
                /Gy
            >
            $<$<CONFIG:Release>:
                /O2;
                /Oi;
                /Gy
            >
            $<$<CONFIG:stlcvless>:
                /O2;
                /Oi;
                /Gy
            >
            $<$<CONFIG:stl>:
                /O2;
                /Oi;
                /Gy
            >
            $<$<CONFIG:Test>:
                /Od;
                /Oi;
                /Gy
            >
            /permissive-;
            /sdl;
            /W3;
            ${DEFAULT_CXX_DEBUG_INFORMATION_FORMAT};
            ${DEFAULT_CXX_EXCEPTION_HANDLING}
        )
    elseif("${CMAKE_VS_PLATFORM_NAME}" STREQUAL "x64")
        target_compile_options(${PROJECT_NAME} PRIVATE
            $<$<CONFIG:Debug>:
                /Od
            >
            $<$<CONFIG:dllcvless>:
                /std:c++17;
                /O2;
                /Oi;
                /Gy
            >
            $<$<CONFIG:dll>:
                /std:c++17;
                /O2;
                /Oi;
                /Gy
            >
            $<$<CONFIG:Python37>:
                /std:c++17;
                /O2;
                /Oi;
                /Gy
            >
            $<$<CONFIG:Python38>:
                /std:c++17;
                /O2;
                /Oi;
                /Gy
            >
            $<$<CONFIG:PythonDebug>:
                /std:c++17;
                /Od;
                /Oi;
                /Gy
            >
            $<$<CONFIG:Release>:
                /O2;
                /Ob2;
                /Oi;
                /GT;
                /Gy;
                /Ot
            >
            $<$<CONFIG:stlcvless>:
                /std:c++17;
                /O2;
                /Oi;
                /Gy
            >
            $<$<CONFIG:stl>:
                /O2;
                /Oi;
                /Gy
            >
            $<$<CONFIG:Test>:
                /Od;
                /Oi;
                /Gy
            >
            /permissive-;
            /sdl;
            /W3;
            ${DEFAULT_CXX_DEBUG_INFORMATION_FORMAT};
            ${DEFAULT_CXX_EXCEPTION_HANDLING}
        )
    elseif("${CMAKE_VS_PLATFORM_NAME}" STREQUAL "x86")
        target_compile_options(${PROJECT_NAME} PRIVATE
            $<$<CONFIG:Debug>:
                /Od
            >
            $<$<CONFIG:dllcvless>:
                /O2;
                /Oi;
                /Gy
            >
            $<$<CONFIG:dll>:
                /O2;
                /Oi;
                /Gy
            >
            $<$<CONFIG:Python37>:
                /O2;
                /Oi;
                /Gy
            >
            $<$<CONFIG:Python38>:
                /O2;
                /Oi;
                /Gy
            >
            $<$<CONFIG:PythonDebug>:
                /O2;
                /Oi;
                /Gy
            >
            $<$<CONFIG:Release>:
                /O2;
                /Oi;
                /Gy
            >
            $<$<CONFIG:stlcvless>:
                /O2;
                /Oi;
                /Gy
            >
            $<$<CONFIG:stl>:
                /O2;
                /Oi;
                /Gy
            >
            $<$<CONFIG:Test>:
                /O2;
                /Oi;
                /Gy
            >
            /permissive-;
            /sdl;
            /W3;
            ${DEFAULT_CXX_DEBUG_INFORMATION_FORMAT};
            ${DEFAULT_CXX_EXCEPTION_HANDLING}
        )
    endif()
    if("${CMAKE_VS_PLATFORM_NAME}" STREQUAL "Any CPU")
        target_link_options(${PROJECT_NAME} PRIVATE
            $<$<CONFIG:Debug>:
                /DEBUG:FULL
            >
            $<$<CONFIG:dllcvless>:
                /DEBUG:FULL;
                /OPT:REF;
                /OPT:ICF
            >
            $<$<CONFIG:dll>:
                /DEBUG:FULL;
                /OPT:REF;
                /OPT:ICF
            >
            $<$<CONFIG:Python37>:
                /DEBUG:FULL;
                /OPT:REF;
                /OPT:ICF
            >
            $<$<CONFIG:Python38>:
                /DEBUG:FULL;
                /OPT:REF;
                /OPT:ICF
            >
            $<$<CONFIG:PythonDebug>:
                /DEBUG:FULL;
                /OPT:REF;
                /OPT:ICF
            >
            $<$<CONFIG:Release>:
                /DEBUG:FULL;
                /OPT:REF;
                /OPT:ICF;
                /PROFILE
            >
            $<$<CONFIG:stlcvless>:
                /DEBUG:FULL;
                /OPT:REF;
                /OPT:ICF
            >
            $<$<CONFIG:stl>:
                /DEBUG:FULL;
                /OPT:REF;
                /OPT:ICF
            >
            $<$<CONFIG:Test>:
                /OPT:REF;
                /OPT:ICF
            >
            /SUBSYSTEM:CONSOLE
        )
    elseif("${CMAKE_VS_PLATFORM_NAME}" STREQUAL "x64")
        target_link_options(${PROJECT_NAME} PRIVATE
            $<$<CONFIG:Debug>:
                /DEBUG:FULL
            >
            $<$<CONFIG:dllcvless>:
                /DEBUG:FULL;
                /OPT:REF;
                /OPT:ICF
            >
            $<$<CONFIG:dll>:
                /DEBUG:FULL;
                /OPT:REF;
                /OPT:ICF
            >
            $<$<CONFIG:Python37>:
                /DEBUG:FULL;
                /OPT:REF;
                /OPT:ICF
            >
            $<$<CONFIG:Python38>:
                /DEBUG:FULL;
                /OPT:REF;
                /OPT:ICF
            >
            $<$<CONFIG:PythonDebug>:
                /DEBUG:FULL;
                /OPT:REF;
                /OPT:ICF
            >
            $<$<CONFIG:Release>:
                /DEBUG:FULL;
                /OPT:REF;
                /OPT:ICF;
                /PROFILE
            >
            $<$<CONFIG:stlcvless>:
                /OPT:REF;
                /OPT:ICF
            >
            $<$<CONFIG:stl>:
                /OPT:REF;
                /OPT:ICF
            >
            $<$<CONFIG:Test>:
                /OPT:REF;
                /OPT:ICF
            >
            /SUBSYSTEM:CONSOLE
        )
    elseif("${CMAKE_VS_PLATFORM_NAME}" STREQUAL "x86")
        target_link_options(${PROJECT_NAME} PRIVATE
            $<$<CONFIG:dllcvless>:
                /OPT:REF;
                /OPT:ICF
            >
            $<$<CONFIG:dll>:
                /OPT:REF;
                /OPT:ICF
            >
            $<$<CONFIG:Python37>:
                /OPT:REF;
                /OPT:ICF
            >
            $<$<CONFIG:Python38>:
                /OPT:REF;
                /OPT:ICF
            >
            $<$<CONFIG:PythonDebug>:
                /OPT:REF;
                /OPT:ICF
            >
            $<$<CONFIG:Release>:
                /OPT:REF;
                /OPT:ICF;
                /PROFILE
            >
            $<$<CONFIG:stlcvless>:
                /OPT:REF;
                /OPT:ICF
            >
            $<$<CONFIG:stl>:
                /OPT:REF;
                /OPT:ICF
            >
            $<$<CONFIG:Test>:
                /OPT:REF;
                /OPT:ICF
            >
            /DEBUG:FULL;
            /SUBSYSTEM:CONSOLE
        )
    endif()
endif()

################################################################################
# Dependencies
################################################################################
if("${CMAKE_VS_PLATFORM_NAME}" STREQUAL "Any CPU")
    set(ADDITIONAL_LIBRARY_DEPENDENCIES
        "$<$<CONFIG:Test>:"
            "opencv_world411"
        ">"
    )
elseif("${CMAKE_VS_PLATFORM_NAME}" STREQUAL "x64")
    set(ADDITIONAL_LIBRARY_DEPENDENCIES
        "$<$<CONFIG:Debug>:"
            "opencv_world411d"
        ">"
        "$<$<CONFIG:dll>:"
            "opencv_world411"
        ">"
        "$<$<CONFIG:Python37>:"
            "python37;"
            "opencv_world411"
        ">"
        "$<$<CONFIG:Python38>:"
            "python38;"
            "opencv_world411"
        ">"
        "$<$<CONFIG:PythonDebug>:"
            "python38"
        ">"
        "$<$<CONFIG:Release>:"
            "opencv_world411"
        ">"
        "$<$<CONFIG:stlcvless>:"
            "opencv_world411"
        ">"
        "$<$<CONFIG:stl>:"
            "opencv_world411"
        ">"
        "$<$<CONFIG:Test>:"
            "opencv_world411"
        ">"
    )
endif()
target_link_libraries(${PROJECT_NAME} PRIVATE "${ADDITIONAL_LIBRARY_DEPENDENCIES}")

if("${CMAKE_VS_PLATFORM_NAME}" STREQUAL "Any CPU")
    target_link_directories(${PROJECT_NAME} PRIVATE
        "$<$<CONFIG:Test>:"
            "D:/MyA/Libraries/Libs"
        ">"
    )
elseif("${CMAKE_VS_PLATFORM_NAME}" STREQUAL "x64")
    target_link_directories(${PROJECT_NAME} PRIVATE
        "$<$<CONFIG:Debug>:"
            "D:/MyA/Libraries/Libs"
        ">"
        "$<$<CONFIG:dll>:"
            "D:/MyA/Libraries/Libs"
        ">"
        "$<$<CONFIG:Python37>:"
            "D:/MyA/Libraries/sources/boost_1_74_0/stage/lib;"
            "D:/MyA/Libraries/sources/boost_1_74_0/libs;"
            "D:/MyA/Libraries/Libs"
        ">"
        "$<$<CONFIG:Python38>:"
            "D:/Install/Python38/libs;"
            "D:/MyA/Libraries/sources/boost_1_74_0/stage/lib;"
            "D:/MyA/Libraries/sources/boost_1_74_0/libs;"
            "D:/MyA/Libraries/Libs"
        ">"
        "$<$<CONFIG:PythonDebug>:"
            "D:/MyA/Libraries/sources/boost_1_74_0/stage/lib;"
            "D:/MyA/Libraries/sources/boost_1_74_0/libs;"
            "D:/MyA/Libraries/Libs"
        ">"
        "$<$<CONFIG:Release>:"
            "D:/MyA/Libraries/Libs"
        ">"
        "$<$<CONFIG:stlcvless>:"
            "D:/MyA/Libraries/Libs"
        ">"
        "$<$<CONFIG:stl>:"
            "D:/MyA/Libraries/Libs"
        ">"
        "$<$<CONFIG:Test>:"
            "D:/MyA/Libraries/Libs"
        ">"
    )
endif()

