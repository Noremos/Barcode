name: Build and Upload Python Package

on:
  release:
    types: [published]
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: read

jobs:
  linux-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Build on manylinux
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/project \
            -w /project \
            quay.io/pypa/manylinux_2_28_x86_64 \
            bash -c "
              yum install -y patchelf
              curl -L -o premake5.tar.gz https://github.com/premake/premake-core/releases/download/v5.0.0-alpha16/premake-5.0.0-alpha16-linux.tar.gz
              tar -xvf premake5.tar.gz
              mv premake5 /usr/local/bin/

              PYVER=$(echo "${{ matrix.python-version }}" | tr -d .)
              PYBIN=/opt/python/cp${PYVER}-cp${PYVER}
              cd PrjBarlib
              premake5 gmake2 --python-include-path=${PYBIN}/include/python${{ matrix.python-version }} \
                --python-version=${{ matrix.python-version }}

              cd build
              make config=python Barlib
              echo --DONE--

              bash ../modules/python/make_package.sh Python ${PYBIN}/bin/python${{ matrix.python-version }}

              mkdir -p /project/dist
              ${PYBIN}/bin/python${{ matrix.python-version }} -m pip install --upgrade auditwheel
              auditwheel repair --plat manylinux_2_28_x86_64 ./Python/BarcodeProject/dist/*.whl -w /project/dist
            "

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: linux-dist-${{ matrix.python-version }}
          path: dist

  windows-build:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - uses: actions/setup-python@v5
        id: cp
        with:
          python-version: ${{ matrix.python-version }}

      - name: setup-msbuild
        uses: microsoft/setup-msbuild@v2

      - uses: Jarod42/install-premake5@v1

      - name: Build library
        run: |
          cd PrjBarlib
          premake5 vs2022 --python-include-path=${{ env.pythonLocation }}/include --python-lib-path=${{ env.pythonLocation }}/libs --python-version=${{ matrix.python-version }}

          cd build
          msbuild /p:Configuration=python /p:Platform=x64 Barlib.vcxproj

      - name: Make package
        run: |
          cd PrjBarlib/build
          ../modules/python/make_package.bat Python ${{ steps.cp.outputs.python-path }}
          xcopy Python\BarcodeProject\dist ..\..\dist /Q /E /Y /I

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: windows-dist-${{ matrix.python-version }}
          path: ${{ github.workspace }}/dist

  pypi-publish:
    runs-on: ubuntu-latest
    needs:
      - linux-build
      - windows-build

    permissions:
      id-token: write

    environment:
      name: pypi
      url: https://pypi.org/project/ImageTopoDec

    steps:
      - name: Retrieve Linux distributions
        uses: actions/download-artifact@v4
        with:
          pattern: linux-dist-*
          path: dist

      - name: Retrieve Windows distributions
        uses: actions/download-artifact@v4
        with:
          pattern: windows-dist-*
          path: dist

      - name: Validate wheels
        run: |
          python -m pip install twine
          twine check dist/*

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist
